{"version":3,"sources":["StMultiSelect.tsx","index.tsx"],"names":["formatString","str","args","key","replace","RegExp","withStreamlitConnection","props","options","itemTemplate","item_template","useEffect","Streamlit","setFrameHeight","resizeFrame","setTimeout","formatOptionLabel","option","dangerouslySetInnerHTML","__html","isMulti","onMenuOpen","onMenuClose","onChange","setComponentValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMA2CMA,EAAe,SAACC,EAAaC,GACjC,GAAIA,EACF,IAAK,IAAIC,KAAOD,EACdD,EAAMA,EAAIG,QAAQ,IAAIC,OAAO,MAAQF,EAAM,MAAO,MAAOD,EAAKC,IAIlE,OAAOF,GAuCMK,eAnCO,SAACC,GACrB,MAAiDA,EAAML,KAA/CM,EAAR,EAAQA,QAAwBC,EAAhC,EAAiBC,cAGjBC,qBAAU,kBAAMC,IAAUC,oBAE1B,IAAMC,EAAc,WAClBC,YAAW,WACTH,IAAUC,mBACT,IAGCG,EACJP,EACA,SAACQ,GAAD,OACE,yBAAKC,wBAAyB,CAACC,OAAQnB,EAAaS,EAAcQ,OAChE,KAEN,OACE,kBAAC,IAAD,CACEG,SAAO,EACPZ,QAASA,EACTa,WAAYP,EACZQ,YAAaR,EACbS,SAAUX,IAAUY,kBACpBR,kBAAmBA,OC3EzBS,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.430567d0.chunk.js","sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode, useEffect, useRef, useState } from \"react\"\n\nimport CreatableSelect from 'react-select/creatable';\n\n// class StMultiSelect extends StreamlitComponentBase<{}> {\n//   public render = (): ReactNode => {\n//     const colourOptions = [\n//       { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\n//       { value: 'blue', label: 'Blue', color: '#0052CC', isDisabled: true },\n//       { value: 'purple', label: 'Purple', color: '#5243AA' },\n//       { value: 'red', label: 'Red', color: '#FF5630', isFixed: true },\n//       { value: 'orange', label: 'Orange', color: '#FF8B00' },\n//       { value: 'yellow', label: 'Yellow', color: '#FFC400' },\n//       { value: 'green', label: 'Green', color: '#36B37E' },\n//       { value: 'forest', label: 'Forest', color: '#00875A' },\n//       { value: 'slate', label: 'Slate', color: '#253858' },\n//       { value: 'silver', label: 'Silver', color: '#666666' },\n//     ];\n    \n//     return (\n//       <CreatableSelect\n//         isMulti\n//         options={colourOptions}\n//         onMenuOpen={this.resizeFrame}\n//         onMenuClose={this.resizeFrame}\n//       />\n//     )\n//   }\n\n//   private resizeFrame = () => {\n//     setTimeout(() => {\n//       Streamlit.setFrameHeight()\n//     }, 0);\n//   }  \n// }\n\n\nconst formatString = (str: string, args: object) => {\n  if (args) {\n    for (var key in args) {\n      str = str.replace(new RegExp(\"\\\\{\" + key + \"\\\\}\", \"gi\"), args[key]);\n    }\n  }\n\n  return str;\n}\n\n\nconst StMultiSelect = (props: ComponentProps) => {\n  const { options, item_template: itemTemplate } = props.args;\n  // const [value, setValue] = useState([]);\n  \n  useEffect(() => Streamlit.setFrameHeight());\n\n  const resizeFrame = () => {\n    setTimeout(() => {\n      Streamlit.setFrameHeight()\n    }, 0);\n  }\n\n  const formatOptionLabel =\n    itemTemplate ?\n    (option) => (\n      <div dangerouslySetInnerHTML={{__html: formatString(itemTemplate, option)}} />\n    ) : null;\n\n  return (\n    <CreatableSelect\n      isMulti\n      options={options}\n      onMenuOpen={resizeFrame}\n      onMenuClose={resizeFrame}\n      onChange={Streamlit.setComponentValue}\n      formatOptionLabel={formatOptionLabel}\n    />\n  )\n}\n\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(StMultiSelect)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\n// Streamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\n// Streamlit.setFrameHeight()\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StMultiSelect from \"./StMultiSelect\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StMultiSelect />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}